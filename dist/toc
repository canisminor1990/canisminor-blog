[{"filename":"20170912183253_name-organizer","title":"Name Organizer","tag":["sketch"],"body":"\n\n\n![](https://raw.githubusercontent.com/canisminor1990/sketch-name-organizer/master/src/Img/rm-banner.png)\n\n[![GitHub release](https://img.shields.io/github/release/canisminor1990/sketch-name-organizer.svg?maxAge=2592000)](https://github.com/canisminor1990/sketch-name-organizer/releases)\n[![GitHub release](https://img.shields.io/badge/Works%20with-Sketch%20Runner-blue.svg?colorB=308ADF)](http://bit.ly/SketchRunnerWebsite)\n\n**Sort Artboards**\n\n按画板所在的x,y坐标给画板排序，并给画板加上顺序前缀\n\n**Sort Artboards Without Numbers**\n\n排序画板，但不加数字前缀\n\n**Rename Layers**\n\n美化图层名，并根据图层所应用的文字、图层样式，或所隶属的symbol重名图层（全局）","full":false},{"filename":"20170912110709_roadhog","title":"Roadhog 踩坑记录","tag":["前端"],"body":"\n\n\n用 [roadhog](https://github.com/sorrycc/roadhog) 有一段时间了，其中才踩过大大小小许多坑，又因为其版本更新说明基本都碎片式地放在releases里或者偶尔出现在issues里😐 ，所以决定开个坑记录一下。\n\n## Sass\n\n从 `1.0.0` 开始完整地支持了 sass ，需自行引入 sass-loader 和 node-sass 依赖，文档没有写的地方是 sass 的 webpack 配置可以直接写在roadhogrc里，sourceMap 和 includePaths 均可用：\n\n```js\nexport default {\n  sass: {\n    sourceMap: process.env.NODE_ENV === 'development',\n    includePaths: [\n      'node_modules',\n      'src/style'\n    ],\n  },\n  ...\n}\n```\n\n> 设置 `includePaths` 后使用 `@import` 时无需处理路径, 设置中路径下的文件可以直接引入，需要注意的是，加入当前目录中有同名的文件，那当前目录中的优先级将会比 includePaths 中的高。\n\n## Vendor\n\nVendor可以解决webpack打包体积过大的问题，提取不变的第三方库单独打包引入，避免每次打包重复下载。要开启此功能首先创建 `src/vendor.js` 文件：\n\n","full":false},{"filename":"20170912100702_webstorm","title":"WebSotrm Tips","tag":["前端","IDE"],"body":"\n\n\n\n**配置文件**\n\n包含配色及CodeStyle等设置，可在启动页导入或者 `Files / Import Settings...`\n\n```bash\ncurl -O https://coding.net/u/canisminor1990/p/myConfig/git/raw/master/webStorm/settings.jar\n```\n\n**激活node支持**\n\n```white\nPreferences / Languages & Frameworks / Node.js and NPM -> Enable\n```\n\n**设置JS语法版本**\n\n```white\nPreferences / Languages & Frameworks / JavaScript / Javascript language version\n-> Flow\n-> Prefer Strict Mode\n```","full":false}]